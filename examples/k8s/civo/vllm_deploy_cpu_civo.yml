apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-server
  namespace: vllm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vllm
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vllm
    spec:
      containers:
      - name: vllm
        image: public.ecr.aws/q9t5s3a7/vllm-cpu-release-repo:v0.8.5.post1
        args: [
          "--model=TinyLlama/TinyLlama-1.1B-Chat-v1.0",
          "--dtype=bfloat16"
        ]
        env:
        - name: VLLM_CPU_KVCACHE_SPACE
          value: "1"
        - name: VLLM_CPU_OMP_THREADS_BIND
          value: "0-2" # <--- ADJUSTED: Match 3 cores (0, 1,2 = 3 threads)
        - name: HUGGING_FACE_HUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: hf-token-secret
              key: token
        ports:
          - containerPort: 8000
        resources:
          requests:
            ephemeral-storage: "2Gi"
            cpu: "3"   # <--- ADJUSTED: Request 3 cores (3000m) for scheduling. Leaves 1 core for OS/K8s.
            memory: "3Gi" # <--- ADJUSTED: TinyLlama 1.1B needs more than 2Gi. Starting with 3Gi request.
          limits:
            ephemeral-storage: "4Gi"
            cpu: "4"   # <--- ADJUSTED: Limit to node's actual core count (4000m) to prevent throttling from higher binding
            memory: "6Gi" # <--- ADJUSTED: Give it more room, as it's a limit. VLLM can be memory-hungry.
        securityContext:
          privileged: true
        volumeMounts:
          - name: dshm
            mountPath: /dev/shm
          - name: llama-storage
            mountPath: /root/.cache/huggingface
#     nodeSelector:
#        role: vllm
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 4Gi
      - name: llama-storage
        persistentVolumeClaim:
          claimName: vllm-models
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-server
  namespace: vllm
spec:
  selector:
    app.kubernetes.io/name: vllm
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP
